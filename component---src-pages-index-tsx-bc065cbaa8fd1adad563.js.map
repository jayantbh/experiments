{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Sidebar/index.tsx","webpack:///./src/components/Layout/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","components_Layout__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","IndexPage","a","createElement","className","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","createContext","object","func","SidebarWrapper","posed","div","enter","x","transition","ease","duration","exit","mapStateToProps","active","application","showSidebar","mapDispatchToProps","dispatch","toggleSidebar","TOGGLE_SIDEBAR","Sidebar","queryData","dispatchProps","useCallback","useDispatch","mapState","useMappedState","navItems","_3678886971","data","allJavascriptFrontmatter","edges","map","fmEdge","matchingAspEdge","allSitePage","find","aspEdge","node","componentPath","fileAbsolutePath","frontmatter","path","react_default","Fragment","onClick","MenuRounded_default","fontSize","react_pose_es","key","CloseRounded_default","gatsby_link_default","to","item","i","title","Layout","children","Helmet","process","components_Sidebar","css","container"],"mappings":"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","file":"component---src-pages-index-tsx-bc065cbaa8fd1adad563.js","sourcesContent":["import Layout from 'components/Layout';\nimport React from 'react';\nimport './index.module.scss';\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <div styleName='container'>\n        <div styleName='brand'>Jayant's</div>\n        <div styleName='brand-l2'>experiments</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","var preferDefault = function preferDefault(m) {\n  return m && m.default || m;\n};\n\nif (process.env.BUILD_STAGE === \"develop\") {\n  module.exports = preferDefault(require(\"./public-page-renderer-dev\"));\n} else if (process.env.BUILD_STAGE === \"build-javascript\") {\n  module.exports = preferDefault(require(\"./public-page-renderer-prod\"));\n} else {\n  module.exports = function () {\n    return null;\n  };\n}","import \"core-js/modules/es6.object.assign\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport InternalPageRenderer from \"./page-renderer\";\n\nvar ProdPageRenderer = function ProdPageRenderer(_ref) {\n  var location = _ref.location,\n      pageResources = _ref.pageResources;\n\n  if (!pageResources) {\n    return null;\n  }\n\n  return React.createElement(InternalPageRenderer, Object.assign({\n    location: location,\n    pageResources: pageResources\n  }, pageResources.json));\n};\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ProdPageRenderer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link, { withPrefix, withAssetPrefix, navigate, push, replace, navigateTo, parsePath } from \"gatsby-link\";\nimport PageRenderer from \"./public-page-renderer\";\nvar StaticQueryContext = React.createContext({});\n\nfunction StaticQueryDataRenderer(_ref) {\n  var staticQueryData = _ref.staticQueryData,\n      data = _ref.data,\n      query = _ref.query,\n      render = _ref.render;\n  var finalData = data ? data.data : staticQueryData[query] && staticQueryData[query].data;\n  return React.createElement(React.Fragment, null, finalData && render(finalData), !finalData && React.createElement(\"div\", null, \"Loading (StaticQuery)\"));\n}\n\nvar StaticQuery = function StaticQuery(props) {\n  var data = props.data,\n      query = props.query,\n      render = props.render,\n      children = props.children;\n  return React.createElement(StaticQueryContext.Consumer, null, function (staticQueryData) {\n    return React.createElement(StaticQueryDataRenderer, {\n      data: data,\n      query: query,\n      render: render || children,\n      staticQueryData: staticQueryData\n    });\n  });\n};\n\nvar useStaticQuery = function useStaticQuery(query) {\n  if (typeof React.useContext !== \"function\" && process.env.NODE_ENV === \"development\") {\n    throw new Error(\"You're likely using a version of React that doesn't support Hooks\\n\" + \"Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.\");\n  }\n\n  var context = React.useContext(StaticQueryContext);\n\n  if (context[query] && context[query].data) {\n    return context[query].data;\n  } else {\n    throw new Error(\"The result of this StaticQuery could not be fetched.\\n\\n\" + \"This is likely a bug in Gatsby and if refreshing the page does not fix it, \" + \"please open an issue in https://github.com/gatsbyjs/gatsby/issues\");\n  }\n};\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func\n};\n\nfunction graphql() {\n  throw new Error(\"It appears like Gatsby is misconfigured. Gatsby related `graphql` calls \" + \"are supposed to only be evaluated at compile time, and then compiled away. \" + \"Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n\" + \"Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.\");\n}\n\nexport { Link, withAssetPrefix, withPrefix, graphql, parsePath, navigate, push, // TODO replace for v3\nreplace, // TODO remove replace for v3\nnavigateTo, // TODO: remove navigateTo for v3\nStaticQueryContext, StaticQuery, PageRenderer, useStaticQuery };","import CloseRounded from '@material-ui/icons/CloseRounded';\nimport MenuRounded from '@material-ui/icons/MenuRounded';\nimport { Link, useStaticQuery } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport React, { useCallback, useMemo } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { ReduxState } from 'reducer';\nimport { TOGGLE_SIDEBAR } from 'reducer/application.actions';\nimport { Dispatch } from 'redux';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\nimport './styles.module.scss';\n\nconst SidebarWrapper = posed.div({\n  enter: {\n    x: '0%',\n    transition: {\n      ease: 'easeOut',\n      duration: 350,\n    },\n  },\n  exit: {\n    x: '-100%',\n    transition: {\n      ease: 'easeIn',\n      duration: 350,\n    },\n  },\n});\n\nconst query = graphql`query {\n  allSitePage {\n    edges {\n      node {\n        componentPath,\n        path\n      }\n    }\n  },\n  allJavascriptFrontmatter {\n    edges {\n      node {\n        frontmatter {\n          title\n          categories\n          description\n          error\n        },\n        fileAbsolutePath\n      }\n    }\n  }\n}`;\n\ninterface AllSitePageEdge {\n  node: {\n    componentPath: string,\n    path: string,\n  };\n}\n\ninterface FrontmatterNode {\n  title: string;\n  categories: string;\n  description: string;\n  error: boolean;\n}\n\ninterface AllJavascriptFrontmatterEdge {\n  node: {\n    frontmatter: FrontmatterNode,\n    fileAbsolutePath: string,\n  };\n}\n\ninterface NavQuery {\n  allSitePage: {\n    edges: AllSitePageEdge[],\n  };\n  allJavascriptFrontmatter: {\n    edges: AllJavascriptFrontmatterEdge[],\n  };\n}\n\ninterface NavItem extends FrontmatterNode {\n  path: string;\n}\n\nconst getNavItems = (queryData: NavQuery): NavItem[] => {\n  if (!queryData) return [];\n  return queryData.allJavascriptFrontmatter.edges.map((fmEdge: any) => {\n    const matchingAspEdge = queryData.allSitePage.edges.find((aspEdge: any) =>\n      aspEdge.node.componentPath === fmEdge.node.fileAbsolutePath) as AllSitePageEdge;\n\n    return { ...fmEdge.node.frontmatter, path: matchingAspEdge.node.path };\n  });\n};\n\nconst Sidebar = () => {\n  const dispatchProps = useCallback(() => mapDispatchToProps(useDispatch()), []);\n  const mapState = useCallback(mapStateToProps, []);\n  const { active } = useMappedState(mapState);\n  const { toggleSidebar } = dispatchProps();\n\n  const navItems = getNavItems(useStaticQuery(query));\n\n  return (\n    <>\n      <div styleName='activation-button' onClick={toggleSidebar}>\n        <MenuRounded styleName='icon' fontSize='large'/>\n      </div>\n      {active && <div styleName='invisible-overlay' onClick={toggleSidebar}/>}\n      <PoseGroup>\n        {active &&\n        <SidebarWrapper\n          key='sidebar'\n          styleName='container'\n        >\n          <div styleName='sidebar-brand'>\n            <CloseRounded\n              fontSize='large'\n              styleName='icon close-icon'\n              onClick={toggleSidebar}\n            />\n            <Link to={'/'} styleName='sidebar-label'>EXPERIMENTS</Link>\n          </div>\n          <ul styleName='nav-ul'>\n            {navItems.map((item, i) => (\n              <li key={i} styleName='nav-li'><Link styleName='nav-link' to={item.path}>{item.title}</Link></li>\n            ))}\n          </ul>\n        </SidebarWrapper>\n        }\n      </PoseGroup>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ application: { showSidebar }}: ReduxState) => {\n  return { active: showSidebar };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    toggleSidebar: () => dispatch(TOGGLE_SIDEBAR()),\n  };\n};\n\nexport default Sidebar;\n","import Sidebar from 'components/Sidebar';\nimport React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport css from './styles.module.scss';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst Layout = ({ children }: Props) => (\n  <>\n    <Helmet title={process.env.GATSBY_PROJECT_NAME}/>\n    <Sidebar/>\n    <div className={css.container}>\n      {children}\n    </div>\n  </>\n);\n\nexport default Layout;\n"],"sourceRoot":""}