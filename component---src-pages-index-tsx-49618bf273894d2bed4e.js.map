{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Sidebar/index.tsx","webpack:///./src/components/Layout/index.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","components_Layout__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","IndexPage","a","createElement","className","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","SidebarWrapper","posed","div","enter","x","transition","ease","duration","exit","mapStateToProps","_ref","active","application","showSidebar","mapDispatchToProps","dispatch","toggleSidebar","TOGGLE_SIDEBAR","Sidebar","dispatchProps","useCallback","useDispatch","mapState","useMappedState","navItems","useMemo","queryData","_3678886971","data","allJavascriptFrontmatter","edges","map","fmEdge","matchingAspEdge","allSitePage","find","aspEdge","node","componentPath","fileAbsolutePath","Object","assign","frontmatter","path","react_default","Fragment","onClick","MenuRounded_default","fontSize","react_pose_es","key","CloseRounded_default","gatsby_link_default","to","item","title","Layout","children","Helmet","process","components_Sidebar","css","container","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-index-tsx-49618bf273894d2bed4e.js","sourcesContent":["import Layout from 'components/Layout';\nimport React from 'react';\nimport './index.module.scss';\n\nconst IndexPage = () => {\n\treturn (\n\t\t<Layout>\n\t\t\t<div styleName='container'>\n\t\t\t\t<div styleName='brand'>Jayant's</div>\n\t\t\t\t<div styleName='brand-l2'>experiments</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import CloseRounded from '@material-ui/icons/CloseRounded';\nimport MenuRounded from '@material-ui/icons/MenuRounded';\nimport { Link, useStaticQuery } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport React, { useCallback, useMemo } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { ReduxState } from 'reducer';\nimport { TOGGLE_SIDEBAR } from 'reducer/application.actions';\nimport { Dispatch } from 'redux';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\nimport './styles.module.scss';\n\nconst SidebarWrapper = posed.div({\n\tenter: {\n\t\tx: '0%',\n\t\ttransition: {\n\t\t\tease: 'easeOut',\n\t\t\tduration: 350,\n\t\t},\n\t},\n\texit: {\n\t\tx: '-100%',\n\t\ttransition: {\n\t\t\tease: 'easeIn',\n\t\t\tduration: 350,\n\t\t},\n\t},\n});\n\nconst query = graphql`query {\n  allSitePage {\n    edges {\n      node {\n        componentPath,\n        path\n      }\n    }\n  },\n  allJavascriptFrontmatter {\n    edges {\n      node {\n        frontmatter {\n          title\n          categories\n          description\n          error\n        },\n        fileAbsolutePath\n      }\n    }\n  }\n}`;\n\ninterface AllSitePageEdge {\n\tnode: {\n\t\tcomponentPath: string,\n\t\tpath: string,\n\t};\n}\n\ninterface FrontmatterNode {\n\ttitle: string;\n\tcategories: string;\n\tdescription: string;\n\terror: boolean;\n}\n\ninterface AllJavascriptFrontmatterEdge {\n\tnode: {\n\t\tfrontmatter: FrontmatterNode,\n\t\tfileAbsolutePath: string,\n\t};\n}\n\ninterface NavQuery {\n\tallSitePage: {\n\t\tedges: AllSitePageEdge[],\n\t};\n\tallJavascriptFrontmatter: {\n\t\tedges: AllJavascriptFrontmatterEdge[],\n\t};\n}\n\ninterface NavItem extends FrontmatterNode {\n\tpath: string;\n}\n\nconst getNavItems = (queryData: NavQuery): NavItem[] => {\n\tif (!queryData) return [];\n\treturn queryData.allJavascriptFrontmatter.edges.map((fmEdge: any) => {\n\t\tconst matchingAspEdge = queryData.allSitePage.edges.find((aspEdge: any) =>\n\t\t\taspEdge.node.componentPath === fmEdge.node.fileAbsolutePath) as AllSitePageEdge;\n\n\t\treturn { ...fmEdge.node.frontmatter, path: matchingAspEdge.node.path };\n\t});\n};\n\nconst Sidebar = () => {\n\tconst dispatchProps = useCallback(() => mapDispatchToProps(useDispatch()), []);\n\tconst mapState = useCallback(mapStateToProps, []);\n\tconst { active } = useMappedState(mapState);\n\tconst { toggleSidebar } = dispatchProps();\n\n\tconst navItems = useMemo(() => getNavItems(useStaticQuery(query)), []);\n\n\treturn (\n\t\t<>\n\t\t\t<div styleName='activation-button' onClick={toggleSidebar}>\n\t\t\t\t<MenuRounded styleName='icon' fontSize='large'/>\n\t\t\t</div>\n\t\t\t{active && <div styleName='invisible-overlay' onClick={toggleSidebar}/>}\n\t\t\t<PoseGroup>\n\t\t\t\t{active &&\n\t\t\t\t<SidebarWrapper\n\t\t\t\t\tkey='sidebar'\n\t\t\t\t\tstyleName='container'\n\t\t\t\t>\n\t\t\t\t\t<div styleName='sidebar-brand'>\n\t\t\t\t\t\t<CloseRounded\n\t\t\t\t\t\t\tfontSize='large'\n\t\t\t\t\t\t\tstyleName='icon close-icon'\n\t\t\t\t\t\t\tonClick={toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Link to={'/'} styleName='sidebar-label'>EXPERIMENTS</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{navItems.map((item) => (\n\t\t\t\t\t\t<Link styleName='nav-link' to={item.path}>{item.title}</Link>\n\t\t\t\t\t))}\n\t\t\t\t</SidebarWrapper>\n\t\t\t\t}\n\t\t\t</PoseGroup>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = ({ application: { showSidebar }}: ReduxState) => {\n\treturn { active: showSidebar };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n\treturn {\n\t\ttoggleSidebar: () => dispatch(TOGGLE_SIDEBAR()),\n\t};\n};\n\nexport default Sidebar;\n","import Sidebar from 'components/Sidebar';\nimport React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport css from './styles.module.scss';\n\ninterface Props {\n\tchildren: ReactNode;\n}\n\nconst Layout = ({ children }: Props) => (\n\t<>\n\t\t<Helmet title={process.env.GATSBY_PROJECT_NAME}/>\n\t\t<Sidebar/>\n\t\t<div className={css.container}>\n\t\t\t{children}\n\t\t</div>\n\t</>\n);\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}