{"version":3,"sources":["webpack:///./src/hooks/use-interval.ts","webpack:///./src/components/ClipPathRoute/colors-component.tsx","webpack:///./src/utils/shuffle.ts","webpack:///./src/components/ClipPathRoute/index.tsx","webpack:///./src/pages/experiments/clip-path-route.tsx"],"names":["useInterval","task","interval","deps","useEffect","timer","setInterval","clearInterval","spring","type","damping","stiffness","ColorShuffle","_useState","useState","initialColors","colors","setColors","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","concat","shuffle","react","className","css","map","background","framer_motion_es","li","key","layoutTransition","style","ClipPathRoute","_ref","location","react_default","a","createElement","initial","exitBeforeEnter","div","pathname","clipPath","zIndex","animate","exit","transition","duration","ease","react_router","path","component","RouteContent1","RouteContent2","RouteContent3","to","cls","shapes","shape","triangle","square","pentagon","colors_component_ColorShuffle","window","performance","memory","setMemory","width","usedJSHeapSize","totalJSHeapSize","toFixed","ClipPathRouteParent","_useState2","isLoaded","setIsLoaded","react_router_dom","container","navigation","activeClassName","active","Fragment","__webpack_require__","d","__webpack_exports__","frontmatter","title","description","categories"],"mappings":"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","file":"component---src-pages-experiments-clip-path-route-tsx-43b74c1ebea74be314ac.js","sourcesContent":["import { DependencyList, useEffect } from 'react';\n\nexport const useInterval = (task: () => void, interval: number, deps: DependencyList) => {\n  useEffect(() => {\n    const timer = setInterval(task, interval);\n    return () => clearInterval(timer);\n  }, deps);\n};\n","import { motion } from 'framer-motion';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { shuffle } from 'utils/shuffle';\n\nimport css from './styles.module.scss';\nimport { useInterval } from 'hooks/use-interval';\n\nconst spring = {\n  type: 'spring',\n  damping: 20,\n  stiffness: 300,\n};\n\nexport const ColorShuffle = () => {\n  const [colors, setColors] = useState(initialColors);\n\n  useInterval(() => setColors(shuffle(colors)), 1500, [colors]);\n\n  return (\n    <ul className={css['tiles-container']}>\n      {colors.map(background => (\n        <motion.li key={background} layoutTransition={spring} style={{ background }} className={css['color-tile']} />\n      ))}\n    </ul>\n  );\n};\n\nconst initialColors = ['#FF008C', '#D309E1', '#9C1AFF', '#7700FF'];\n","export function shuffle(array: any[]) {\n  let currentIndex = array.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return [...array];\n}\n","import cls from 'classnames';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter, NavLink, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\n\nimport { ColorShuffle } from 'components/ClipPathRoute/colors-component';\nimport { useInterval } from 'hooks/use-interval';\nimport css from './styles.module.scss';\n\nconst ClipPathRoute = ({ location }: RouteProps) => {\n  return (\n    <AnimatePresence initial={false} exitBeforeEnter={false}>\n      <motion.div\n        key={location ? location.pathname : 'no-location'}\n        className={css['routes-wrapper']}\n        initial={{ clipPath: 'circle(calc(0% - 80px) at top center)', zIndex: 0 }}\n        animate={{ clipPath: 'circle(calc(100% - 80px) at top center)', zIndex: 1 }}\n        exit={{ clipPath: 'circle(calc(100.1% - 80px) at top center)', zIndex: 0 }}\n        transition={{\n          duration: 1,\n          ease: 'easeOut',\n        }}\n      >\n        <Switch location={location}>\n          <Route path={'/route-1'} component={RouteContent1} />\n          <Route path={'/route-2'} component={RouteContent2} />\n          <Route path={'/route-3'} component={RouteContent3} />\n\n          <Redirect to={'/route-1'} />\n        </Switch>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nconst RouteContent1 = () => (\n  <div className={cls(css['route-container'], css['route-1'])}>\n    <h1>Route 1</h1>\n    <h2>This is an experiment in clip-path based route animations.</h2>\n    <div className={css.shapes}>\n      <div className={cls(css.shape, css.triangle)} />\n      <div className={cls(css.shape, css.square)} />\n      <div className={cls(css.shape, css.pentagon)} />\n    </div>\n    <h2>You'll see that there's a small amount of content here.</h2>\n  </div>\n);\nconst RouteContent2 = () => (\n  <div className={cls(css['route-container'], css['route-2'])}>\n    <h1>Route 2</h1>\n    <h2>This screen has some animated stuff to simulate a lot of different things going on.</h2>\n    <div>\n      <ColorShuffle />\n    </div>\n    <h2>This is a basic color tiles shuffle example taken from Framer Motion's examples.</h2>\n    <p>\n      This is a good example about why you should not use this approach when transitioning in/out of sites that already\n      have a lot of stuff going on.\n    </p>\n    <p>This is best suited for static content views.</p>\n  </div>\n);\nconst RouteContent3 = () => {\n  const [memory, setMemory] = useState(window.performance.memory);\n\n  useInterval(() => memory && setMemory(window.performance.memory), 1000, []);\n\n  return (\n    <div className={cls(css['route-container'], css['route-3'])}>\n      <h1>Route 3</h1>\n      <h2>This is just another page to showcase some content.</h2>\n      {memory ? (\n        <div>\n          <div className={css['memory-bar']}>\n            <div style={{ width: `${(memory.usedJSHeapSize / memory.totalJSHeapSize) * 100}%` }} />\n          </div>\n          <div>\n            {(memory.usedJSHeapSize / 10e6).toFixed(2)} MBs / {(memory.totalJSHeapSize / 10e6).toFixed(2)} MBs\n          </div>\n          <div>This is the amount of heap memory used, out of the available heap memory.</div>\n        </div>\n      ) : (\n        <div>\n          Your browser doesn't support <code>window.performance.memory</code>. If it did, you'd see current memory usage\n          here right now.\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ClipPathRouteParent = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n\n  if (!isLoaded) return <></>;\n  return (\n    <HashRouter>\n      <div className={css.container}>\n        <div className={css.navigation}>\n          <NavLink to={'/route-1'} activeClassName={css.active}>\n            Go to 1\n          </NavLink>\n          <NavLink to={'/route-2'} activeClassName={css.active}>\n            Go to 2\n          </NavLink>\n          <NavLink to={'/route-3'} activeClassName={css.active}>\n            Go to 3\n          </NavLink>\n        </div>\n        <Route path={'/'} component={ClipPathRoute} />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default ClipPathRouteParent;\n","import component from 'components/ClipPathRoute/index';\nexport default component;\n\nexport const frontmatter = {\n  title: 'Clip Path Route Transition',\n  description: 'Switch between multiple routes with a nice clip-path animation.',\n  categories: ['canvas', '2d', 'draw'],\n};\n"],"sourceRoot":""}